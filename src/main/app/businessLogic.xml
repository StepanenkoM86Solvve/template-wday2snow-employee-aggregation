<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:wd-connector="http://www.mulesoft.org/schema/mule/wd-connector"
	xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" 
	xmlns="http://www.mulesoft.org/schema/mule/core" 
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking"
	xmlns:servicenow="http://www.mulesoft.org/schema/mule/servicenow"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:core="http://www.mulesoft.org/schema/mule/core"
	 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/wd-connector http://www.mulesoft.org/schema/mule/wd-connector/current/mule-wd-connector.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/servicenow http://www.mulesoft.org/schema/mule/servicenow/current/mule-servicenow.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">

	<flow name="mainFlow" 
		doc:description="This flow is the entry point to the Template business logic.

This flow should control the direction of the application, and it should be called by the different endpoints that your Template exposes to trigger it.">
		<flow-ref name="gatherDataFlow" doc:name="call gatherDataFlow" />
		<flow-ref name="formatOutputFlow" doc:name="call formatOutputFlow" />
		<flow-ref name="outboundFlow" doc:name="call outboundFlow" />
		<exception-strategy ref="defaultChoiceExceptionStrategy"
			doc:name="Reference Exception Strategy" />
	</flow>
    <flow name="gatherDataFlow" processingStrategy="synchronous">
        <scatter-gather doc:name="Scatter-Gather">
            <custom-aggregation-strategy class="org.mule.templates.transformers.WorkersMergeAggregationStrategy"/>
            <processor-chain>
                <dw:transform-message doc:name="Create GetWorkers Request">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/xml
 %namespace ns0 urn:com.workday/bsvc
 ---
 {
 	ns0#Get_Workers_Request: {
 		ns0#Request_Criteria: {
 			ns0#Exclude_Inactive_Workers: true
 		},
 		ns0#Response_Filter: {
 			ns0#Count: p('page.size')
 		},
 		ns0#Response_Group: {
 			ns0#Include_Reference: true,
 			ns0#Include_Personal_Information: true
 		}
  	}
 }]]></dw:set-payload>
                </dw:transform-message>
                <wd-connector:invoke config-ref="Workday__Basic" type="Human_Resources||Get_Workers" doc:name="get Workers from Workday"/>
                <dw:transform-message doc:name="Workday Workers to Maps" metadata:id="7519f207-f22b-4127-b037-1ffe4aa83855">
                	<dw:input-payload doc:sample="sample_data\Get_Workers_Response.xml"/>
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/java
%namespace ns0 urn:com.workday/bsvc
---
payload.ns0#Get_Workers_Response.ns0#Response_Data.*ns0#Worker map ((worker , indexOfWorker) -> {
	Id: payload.ns0#Get_Workers_Response.ns0#Response_Data.ns0#Worker.ns0#Worker_Reference.ns0#ID,
	Name: payload.ns0#Get_Workers_Response.ns0#Response_Data.ns0#Worker.ns0#Worker_Data.ns0#Personal_Data.ns0#Name_Data.ns0#Legal_Name_Data.ns0#Name_Detail_Data.@ns0#Formatted_Name,
	Email: payload.ns0#Get_Workers_Response.ns0#Response_Data.ns0#Worker.ns0#Worker_Data.ns0#Personal_Data.ns0#Contact_Data.ns0#Email_Address_Data.ns0#Email_Address,
	Username: payload.ns0#Get_Workers_Response.ns0#Response_Data.ns0#Worker.ns0#Worker_Data.ns0#User_ID
})]]></dw:set-payload>
                </dw:transform-message>
            </processor-chain>
            <processor-chain>
                <dw:transform-message doc:name="Create getRecords Request">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/xml
%namespace ns0 http://www.service-now.com/sys_user
---
{
	ns0#getRecords: {
		ns0#"__limit": p('page.size')
	}
}]]></dw:set-payload>
                </dw:transform-message>
                <servicenow:invoke config-ref="ServiceNow" type="sys_user||getRecords" doc:name="get Users from ServiceNow"/>
                <dw:transform-message doc:name="ServiceNow Users to Maps" metadata:id="d5b8b99f-22f8-403a-9426-d7d9a780a131">
                	<dw:input-payload doc:sample="sample_data\getRecordsResponse.xml"/>
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/java
%namespace ns0 http://www.service-now.com/sys_user
---
payload.ns0#getRecordsResponse.*ns0#getRecordsResult map
{
	Id: $.ns0#sys_id,
	Name: $.ns0#name,
	Email: $.ns0#email,
	Username: $.ns0#user_name
}]]></dw:set-payload>
                </dw:transform-message>
            </processor-chain>
        </scatter-gather>
    </flow>
    <flow name="formatOutputFlow" processingStrategy="synchronous">
        <custom-transformer class="org.mule.templates.transformers.SortWorkersTransformer" doc:name="Custom component to sort workers list"/>
        <dw:transform-message doc:name="transform Collection of Maps to CSV Format" metadata:id="6a6ebbf7-91f0-4286-a8a0-9bdd4edc7c20">
        	<dw:input-payload doc:sample="sample_data\sorted_Workers.dwl"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/csv header=true, quoteValues=true
---
payload map
{
	Name: $.Name,
	Email: $.Email,
	"Id in Workday": $.IDInWorkday,
	"Id in ServiceNow": $.IDInServiceNow,
	"Username in Workday": $.UsernameInWorkday,
	"Username in ServiceNow": $.UsernameInServiceNow
}]]></dw:set-payload>
        </dw:transform-message>
        <object-to-string-transformer doc:name="CSV Output Object to String"/>
    </flow>

</mule>
